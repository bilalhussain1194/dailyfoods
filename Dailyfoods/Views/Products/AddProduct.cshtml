@model Dailyfoods.Viewmodel.AddProductViewmodel

@{
    ViewBag.Title = "AddProduct";

    Layout = "~/Views/Shared/_DailyfoodsAdminMaster.cshtml";
}
<br/>
<h2 class="title-text">Add Product</h2>

@using (Html.BeginForm("AddProduct", "Products", FormMethod.Post, htmlAttributes: new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.products.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextBoxFor(model => model.products.name, htmlAttributes : new { @class = "form-control  woocommerce-Input woocommerce-Input--text input-text" })
                @Html.ValidationMessageFor(model => model.products.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.products.qty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.products.qty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.products.qty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.products.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                <div class="panel panel-primary">
                    <div class="panel-body">
                        @Html.TextAreaFor(model => model.products.description, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                   

                    @Html.ValidationMessageFor(model => model.products.description, "", new { @class = "text-danger" })
                </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.products.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.products.price, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.products.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.products.special_price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.products.special_price, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.products.special_price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.products.date_from, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.products.date_from, new { htmlAttributes = new { @class = "form-control", @type = "date",@readonly="true" } })
                @Html.ValidationMessageFor(model => model.products.date_from, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.products.date_to, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.products.date_to, new { htmlAttributes = new { @class = "form-control", @type = "date", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.products.date_to, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.products.created_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @*@Html.TextBoxFor(model => model.products.created_date, htmlAttributes: new { @class = "form-control", @type = "date", @Value = DateTime.Now } )*@
                <input asp-for="products.created_date" value="@DateTime.Today" type="datetime" class="form-control" />
                @Html.ValidationMessageFor(model => model.products.created_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.products.sku, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.products.sku, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.products.sku, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category.id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
              
                @Html.DropDownListFor(model => model.category.id, new SelectList(Model.category_list, "id", "name"), "please select category ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.category.id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>

            <label class="control-label col-md-2">Upload Files</label>
            <div class="col-md-6" >
               <input type="file"  multiple name="FileUpload" id="FileUpload" />
            </div>
           
        </div>
        @*<div class="form-control">
            <div id="DynamicsImages">

            </div>

        </div>*@
        @*<input type="submit" name="upload" value="submit" />*@
        

        <div class="form-group right-side">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
  
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts{
    <script>
        document.getElementById("products_special_price").addEventListener("keyup", function () {
            var special_price = document.getElementById('products_special_price').value;
            if (special_price != "") {
                document.getElementById('products_date_from').removeAttribute("readonly");
                document.getElementById('products_date_to').removeAttribute("readonly");
            } else {
                document.getElementById('products_date_from').setAttribute("readonly", true);
                document.getElementById('products_date_to').setAttribute("readonly", true);
            }
        });
    </script>
<script>
    (function ($) {
        function HomeIndex() {
            var $this = this;

            function initialize() {
                $('#products_description').summernote({
                    focus: true,
                    height: 150,
                    codemirror: {
                        theme: 'united'
                    }
                });
            }

            $this.init = function () {
                initialize();
            }
        }
        $(function () {
            var self = new HomeIndex();
            self.init();
        })
    }(jQuery))

</script>
}

@*<script>
    debugger
    var loadfile = function (event) {

        var file = event.target.files;
        for(var i=0;i<file.lenght;i++)
        {
            $("#DynamicsImages").append("<image src='" + URL.createObjectURL(event.target.files[i]) + "' class='dynamicimages'</br>")
        }

    }
</script>*@
@*<script>
    $("#FileUpload").on('change', function () {



        var input = $(this)[0];


        if (input.files && input.files[0]) {

            var data = new FormData();
            data.append("UploadedFile", input.files[0]);

            $.ajax({
                type: "POST",
                url: "upload_service.ashx?id=5",
                contentType: false,
                processData: false,
                data: data,
                success: function (data) {
                    if (data != "001" && data != "999") {

                        var _org_image = base_url + 'content/items/original/' + data.FileName;

                        var _html = "<div class='col-sm-2' style='padding-left: 0px; padding-right: 0px;'>" +
                            "           <ul class='thumbnails gallery' style='padding-left: 0px; margin-bottom: 0px;'>" +
                            "               <li id='image-1' class='thumbnail' style='margin-left: 0px; margin-bottom: 15px !important;'>" +
                            "                   <a style='background:url(" + _org_image + "); width: 147px; height: 147px; background-size: 147px 147px; background-repeat: no-repeat;' title='' href='" + _org_image + "'>" +
                            "                       <img class='grayscale' src='" + _org_image + "' style='width: 147px; height: 147px;' alt='' data-srno='" + data.SrNo + "' data-orgimg='" + data.FileName + "'>" +
                            "                   </a>" +
                            "               </li>" +
                            "           </ul>" +
                            "       </div>";

                        item_srno = data.SrNo;
                        $("#FileUpload1").val('');
                        $("#txtImageURL").val(data.FileName);
                        $("#txtuseCropper").val("0");
                        $("#divItemImages").append(_html);


                        initializeGallery();

                        setCroperData();
                        $image.cropper('destroy').cropper(options);
                        showCroper();
                        $("#croppedModal").modal();
                    }
                    else {
                        alert('failed to create thumbnails');
                    }

                },
                error: function (data) {
                    console.log('Upload error');
                }
            });
        }
    });



</script>*@
